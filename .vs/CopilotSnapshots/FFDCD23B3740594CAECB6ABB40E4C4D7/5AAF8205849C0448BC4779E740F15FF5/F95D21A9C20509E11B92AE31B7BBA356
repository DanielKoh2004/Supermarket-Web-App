using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace WebApplication1
{
    public partial class Payment : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                pnlBanking.Visible = false;
                pnlCard.Visible = false;
                pnlEwallet.Visible = false;
            }
        }

        protected void rblPaymentMethod_SelectedIndexChanged(object sender, EventArgs e)
        {
            string selected = rblPaymentMethod.SelectedValue;

            pnlBanking.Visible = selected == "bank";
            pnlCard.Visible = selected == "card";
            pnlEwallet.Visible = selected == "wallet";
        }



        protected void btnPay_Click(object sender, EventArgs e)
        {
            // Get user/customer ID
            int accountId = Session["AccountID"] != null ? Convert.ToInt32(Session["AccountID"]) : 0;
            if (accountId <= 0)
            {
                Response.Write("<script>alert('Please log in to complete payment.'); window.location='Login.aspx';</script>");
                return;
            }

            string connStr = System.Configuration.ConfigurationManager.ConnectionStrings["OnlineOrderSystemConnection"].ConnectionString;
            using (var con = new System.Data.SqlClient.SqlConnection(connStr))
            {
                con.Open();
                // Get CustomerID from AccountID
                int customerId = 0;
                using (var cmd = new System.Data.SqlClient.SqlCommand("SELECT CustomerID FROM Customer WHERE AccountID=@AccountID", con))
                {
                    cmd.Parameters.AddWithValue("@AccountID", accountId);
                    var result = cmd.ExecuteScalar();
                    if (result != null) customerId = Convert.ToInt32(result);
                }
                if (customerId == 0)
                {
                    Response.Write("<script>alert('Customer not found.'); window.location='Home.aspx';</script>");
                    return;
                }

                // Get cart items for this user
                int cartId = 0;
                using (var cmd = new System.Data.SqlClient.SqlCommand("SELECT CartID FROM Cart WHERE AccountID=@AccountID", con))
                {
                    cmd.Parameters.AddWithValue("@AccountID", accountId);
                    var result = cmd.ExecuteScalar();
                    if (result != null) cartId = Convert.ToInt32(result);
                }
                if (cartId == 0)
                {
                    Response.Write("<script>alert('Your cart is empty.'); window.location='Menu.aspx';</script>");
                    return;
                }

                var cartItems = new List<dynamic>();
                using (var cmd = new System.Data.SqlClient.SqlCommand("SELECT ItemID, ItemQuantity FROM Cart_Item WHERE CartID=@CartID", con))
                {
                    cmd.Parameters.AddWithValue("@CartID", cartId);
                    using (var reader = cmd.ExecuteReader())
                    {
                        while (reader.Read())
                        {
                            cartItems.Add(new { ItemID = reader.GetInt32(0), Quantity = reader.GetInt32(1) });
                        }
                    }
                }
                if (cartItems.Count == 0)
                {
                    Response.Write("<script>alert('Your cart is empty.'); window.location='Menu.aspx';</script>");
                    return;
                }

                // Get delivery info and payment method from previous page/session (for demo, use placeholders)
                string deliveryInfo = Session["DeliveryInfo"] != null ? Session["DeliveryInfo"].ToString() : "N/A";
                string paymentMethod = Session["PaymentMethod"] != null ? Session["PaymentMethod"].ToString() : "N/A";
                decimal totalAmount = 0;
                // Calculate total amount
                foreach (var item in cartItems)
                {
                    using (var cmd = new System.Data.SqlClient.SqlCommand("SELECT UnitPrice FROM Item WHERE ItemID=@ItemID", con))
                    {
                        cmd.Parameters.AddWithValue("@ItemID", item.ItemID);
                        var priceObj = cmd.ExecuteScalar();
                        if (priceObj != null)
                            totalAmount += Convert.ToDecimal(priceObj) * item.Quantity;
                    }
                }

                // Insert order
                int orderId = 0;
                using (var cmd = new System.Data.SqlClient.SqlCommand("INSERT INTO [Order] (CustomerID, OrderDate, TotalAmount, DeliveryInfo, PaymentMethod) OUTPUT INSERTED.OrderID VALUES (@CustomerID, @OrderDate, @TotalAmount, @DeliveryInfo, @PaymentMethod)", con))
                {
                    cmd.Parameters.AddWithValue("@CustomerID", customerId);
                    cmd.Parameters.AddWithValue("@OrderDate", DateTime.Now);
                    cmd.Parameters.AddWithValue("@TotalAmount", totalAmount);
                    cmd.Parameters.AddWithValue("@DeliveryInfo", deliveryInfo);
                    cmd.Parameters.AddWithValue("@PaymentMethod", paymentMethod);
                    orderId = (int)cmd.ExecuteScalar();
                }

                // Insert order items
                foreach (var item in cartItems)
                {
                    using (var cmd = new System.Data.SqlClient.SqlCommand("INSERT INTO OrderItem (ItemID, OrderID, Quantity) VALUES (@ItemID, @OrderID, @Quantity)", con))
                    {
                        cmd.Parameters.AddWithValue("@ItemID", item.ItemID);
                        cmd.Parameters.AddWithValue("@OrderID", orderId);
                        cmd.Parameters.AddWithValue("@Quantity", item.Quantity);
                        cmd.ExecuteNonQuery();
                    }
                }

                // Clear cart items
                using (var cmd = new System.Data.SqlClient.SqlCommand("DELETE FROM Cart_Item WHERE CartID=@CartID", con))
                {
                    cmd.Parameters.AddWithValue("@CartID", cartId);
                    cmd.ExecuteNonQuery();
                }
                // Optionally clear cart itself
                using (var cmd = new System.Data.SqlClient.SqlCommand("DELETE FROM Cart WHERE CartID=@CartID", con))
                {
                    cmd.Parameters.AddWithValue("@CartID", cartId);
                    cmd.ExecuteNonQuery();
                }
            }
            // Show alert, then redirect to order history
            Response.Write("<script>alert('Payment Successful! Thank You!'); window.location='OrderHistory.aspx';</script>");
        }
        protected void btnBack_Click(object sender, EventArgs e)
        {
            Response.Redirect("Checkout.aspx");

        }

    }
}