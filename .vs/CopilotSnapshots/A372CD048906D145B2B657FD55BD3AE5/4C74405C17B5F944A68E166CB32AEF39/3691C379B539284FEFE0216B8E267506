using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Net.Mail;

namespace WebApplication1
{
    public partial class Payment : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                pnlBanking.Visible = false;
                pnlCard.Visible = false;
                pnlEwallet.Visible = false;
            }
        }

        protected void rblPaymentMethod_SelectedIndexChanged(object sender, EventArgs e)
        {
            string selected = rblPaymentMethod.SelectedValue;
            Session["PaymentMethod"] = selected; // Save selected method to session
            pnlBanking.Visible = selected == "bank";
            pnlCard.Visible = selected == "card";
            pnlEwallet.Visible = selected == "wallet";
        }



        protected void btnPay_Click(object sender, EventArgs e)
        {
            // Get user/customer ID
            int accountId = Session["AccountID"] != null ? Convert.ToInt32(Session["AccountID"]) : 0;
            if (accountId <= 0)
            {
                Response.Write("<script>alert('Please log in to complete payment.'); window.location='Login.aspx';</script>");
                return;
            }

            string connStr = System.Configuration.ConfigurationManager.ConnectionStrings["OnlineOrderSystemConnection"].ConnectionString;
            using (var con = new System.Data.SqlClient.SqlConnection(connStr))
            {
                con.Open();
                // Get CustomerID from AccountID
                int customerId = 0;
                using (var cmd = new System.Data.SqlClient.SqlCommand("SELECT CustomerID FROM Customer WHERE AccountID=@AccountID", con))
                {
                    cmd.Parameters.AddWithValue("@AccountID", accountId);
                    var result = cmd.ExecuteScalar();
                    if (result != null) customerId = Convert.ToInt32(result);
                }
                if (customerId == 0)
                {
                    Response.Write("<script>alert('Customer not found.'); window.location='Home.aspx';</script>");
                    return;
                }

                // Get cart items for this user
                int cartId = 0;
                using (var cmd = new System.Data.SqlClient.SqlCommand("SELECT CartID FROM Cart WHERE AccountID=@AccountID", con))
                {
                    cmd.Parameters.AddWithValue("@AccountID", accountId);
                    var result = cmd.ExecuteScalar();
                    if (result != null) cartId = Convert.ToInt32(result);
                }
                if (cartId == 0)
                {
                    Response.Write("<script>alert('Your cart is empty.'); window.location='Menu.aspx';</script>");
                    return;
                }

                var cartItems = new List<dynamic>();
                using (var cmd = new System.Data.SqlClient.SqlCommand("SELECT ItemID, ItemQuantity FROM Cart_Item WHERE CartID=@CartID", con))
                {
                    cmd.Parameters.AddWithValue("@CartID", cartId);
                    using (var reader = cmd.ExecuteReader())
                    {
                        while (reader.Read())
                        {
                            cartItems.Add(new { ItemID = reader.GetInt32(0), Quantity = reader.GetInt32(1) });
                        }
                    }
                }
                if (cartItems.Count == 0)
                {
                    Response.Write("<script>alert('Your cart is empty.'); window.location='Menu.aspx';</script>");
                    return;
                }

                // Get delivery info and payment method from previous page/session (for demo, use placeholders)
                string deliveryInfo = Session["DeliveryInfo"] != null ? Session["DeliveryInfo"].ToString() : "N/A";
                string paymentMethod = Session["PaymentMethod"] != null ? Session["PaymentMethod"].ToString() : "N/A";
                decimal totalAmount = 0;
                // Calculate total amount
                foreach (var item in cartItems)
                {
                    using (var cmd = new System.Data.SqlClient.SqlCommand("SELECT UnitPrice FROM Item WHERE ItemID=@ItemID", con))
                    {
                        cmd.Parameters.AddWithValue("@ItemID", item.ItemID);
                        var priceObj = cmd.ExecuteScalar();
                        if (priceObj != null)
                            totalAmount += Convert.ToDecimal(priceObj) * item.Quantity;
                    }
                }

                // Insert order
                int orderId = 0;
                using (var cmd = new System.Data.SqlClient.SqlCommand("INSERT INTO [Order] (CustomerID, OrderDate, TotalAmount) OUTPUT INSERTED.OrderID VALUES (@CustomerID, @OrderDate, @TotalAmount)", con))
                {
                    cmd.Parameters.AddWithValue("@CustomerID", customerId);
                    cmd.Parameters.AddWithValue("@OrderDate", DateTime.Now);
                    cmd.Parameters.AddWithValue("@TotalAmount", totalAmount);
                    orderId = (int)cmd.ExecuteScalar();
                }

                // Insert order items
                foreach (var item in cartItems)
                {
                    // Get the current price for the item
                    decimal itemPrice = 0;
                    using (var priceCmd = new System.Data.SqlClient.SqlCommand("SELECT UnitPrice FROM Item WHERE ItemID=@ItemID", con))
                    {
                        priceCmd.Parameters.AddWithValue("@ItemID", item.ItemID);
                        var priceObj = priceCmd.ExecuteScalar();
                        if (priceObj != null)
                            itemPrice = Convert.ToDecimal(priceObj);
                    }

                    using (var cmd = new System.Data.SqlClient.SqlCommand("INSERT INTO OrderItem (ItemID, OrderID, Quantity, ItemPrice) VALUES (@ItemID, @OrderID, @Quantity, @ItemPrice)", con))
                    {
                        cmd.Parameters.AddWithValue("@ItemID", item.ItemID);
                        cmd.Parameters.AddWithValue("@OrderID", orderId);
                        cmd.Parameters.AddWithValue("@Quantity", item.Quantity);
                        cmd.Parameters.AddWithValue("@ItemPrice", itemPrice);
                        cmd.ExecuteNonQuery();
                    }

                    // Update stock quantity in Item table
                    using (var updateStockCmd = new System.Data.SqlClient.SqlCommand("UPDATE Item SET StockQuantity = StockQuantity - @Quantity WHERE ItemID = @ItemID", con))
                    {
                        updateStockCmd.Parameters.AddWithValue("@Quantity", item.Quantity);
                        updateStockCmd.Parameters.AddWithValue("@ItemID", item.ItemID);
                        updateStockCmd.ExecuteNonQuery();
                    }
                }

                // Insert payment record
                using (var cmd = new System.Data.SqlClient.SqlCommand(
                    "INSERT INTO Payment (OrderID, PaymentAmount, PaymentDate, PaymentMethod) VALUES (@OrderID, @PaymentAmount, @PaymentDate, @PaymentMethod)", con))
                {
                    cmd.Parameters.AddWithValue("@OrderID", orderId);
                    cmd.Parameters.AddWithValue("@PaymentAmount", totalAmount);
                    cmd.Parameters.AddWithValue("@PaymentDate", DateTime.Now);
                    cmd.Parameters.AddWithValue("@PaymentMethod", paymentMethod);
                    cmd.ExecuteNonQuery();
                }

                // Insert delivery info if applicable
                string checkoutMethod = Session["CheckoutMethod"] != null ? Session["CheckoutMethod"].ToString() : "";
                string recipientName = Session["RecipientName"] != null ? Session["RecipientName"].ToString() : "";
                string deliveryAddress = Session["DeliveryAddress"] != null ? Session["DeliveryAddress"].ToString() : "";
                string contactNumber = Session["ContactNumber"] != null ? Session["ContactNumber"].ToString() : "";

                if (checkoutMethod == "delivery" && !string.IsNullOrEmpty(recipientName) && !string.IsNullOrEmpty(deliveryAddress))
                {
                    using (var cmd = new System.Data.SqlClient.SqlCommand("INSERT INTO Delivery (OrderID, RecipientName, DeliveryAddress, ContactNumber) VALUES (@OrderID, @RecipientName, @DeliveryAddress, @ContactNumber)", con))
                    {
                        cmd.Parameters.AddWithValue("@OrderID", orderId);
                        cmd.Parameters.AddWithValue("@RecipientName", recipientName);
                        cmd.Parameters.AddWithValue("@DeliveryAddress", deliveryAddress);
                        cmd.Parameters.AddWithValue("@ContactNumber", contactNumber);
                        cmd.ExecuteNonQuery();
                    }
                }

                // Clear cart items
                using (var cmd = new System.Data.SqlClient.SqlCommand("DELETE FROM Cart_Item WHERE CartID=@CartID", con))
                {
                    cmd.Parameters.AddWithValue("@CartID", cartId);
                    cmd.ExecuteNonQuery();
                }
                // Optionally clear cart itself
                using (var cmd = new System.Data.SqlClient.SqlCommand("DELETE FROM Cart WHERE CartID=@CartID", con))
                {
                    cmd.Parameters.AddWithValue("@CartID", cartId);
                    cmd.ExecuteNonQuery();
                }
            }
            // Show alert, then redirect to order history
            Response.Write("<script>alert('Payment Successful! Thank You!'); window.location='OrderHistory.aspx';</script>");

            string userEmail = null;
            // Get user email from Account table
            using (var con = new System.Data.SqlClient.SqlConnection(connStr))
            {
                con.Open();
                using (var cmd = new System.Data.SqlClient.SqlCommand("SELECT Email FROM Account WHERE AccountID=@AccountID", con))
                {
                    cmd.Parameters.AddWithValue("@AccountID", accountId);
                    var result = cmd.ExecuteScalar();
                    if (result != null) userEmail = result.ToString();
                }
            }
            string checkoutMethod = Session["CheckoutMethod"] != null ? Session["CheckoutMethod"].ToString() : "";
            string recipientName = Session["RecipientName"] != null ? Session["RecipientName"].ToString() : "";
            string deliveryAddress = Session["DeliveryAddress"] != null ? Session["DeliveryAddress"].ToString() : "";
            string contactNumber = Session["ContactNumber"] != null ? Session["ContactNumber"].ToString() : "";
            // Compose email
            string subject = "Order Confirmation - Happy Supermarket";
            string body = $"Dear Customer,<br/><br/>Thank you for your order!<br/>Order ID: {orderId}<br/>Total: RM {totalAmount:F2}<br/>Payment Method: {paymentMethod}<br/>";
            if (checkoutMethod == "delivery")
            {
                body += $"Delivery to: {deliveryAddress}<br/>Recipient: {recipientName}<br/>Contact: {contactNumber}<br/>";
            }
            else
            {
                body += $"Pickup Location: {Session["PickupLocation"]}<br/>";
            }
            body += "<br/>We appreciate your business!<br/>Happy Supermarket Team";
            // Send email
            try
            {
                MailMessage mail = new MailMessage("yourcompany@email.com", userEmail, subject, body);
                mail.IsBodyHtml = true;
                SmtpClient client = new SmtpClient("smtp.yourprovider.com", 587);
                client.Credentials = new System.Net.NetworkCredential("yourcompany@email.com", "yourpassword");
                client.EnableSsl = true;
                client.Send(mail);
            }
            catch (Exception ex)
            {
                // Optionally log or show error
            }
        }
        protected void btnBack_Click(object sender, EventArgs e)
        {
            Response.Redirect("Checkout.aspx");

        }

    }
}   