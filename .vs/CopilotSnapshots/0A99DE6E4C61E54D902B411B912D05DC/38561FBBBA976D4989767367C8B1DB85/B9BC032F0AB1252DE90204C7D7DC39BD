using System;
using System.Data.SqlClient;
using WebApplication1.Helpers;

namespace WebApplication1
{
    public partial class ForgotPassword : System.Web.UI.Page
    {
        // Connection string to the database
        string connStr = System.Configuration.ConfigurationManager.ConnectionStrings["OnlineOrderSystemConnection"].ConnectionString;
        // Stores the found AccountID after email lookup
        int foundAccountId = 0;

        // Event handler for loading secret questions based on email
        protected void btnLoadQuestions_Click(object sender, EventArgs e)
        {
            // Clear previous result and hide questions panel
            lblResult.Text = "";
            pnlQuestions.Visible = false;
            // Get email input from user
            string email = txtEmail.Text.Trim();
            using (SqlConnection conn = new SqlConnection(connStr))
            {
                conn.Open();
                // Prepare SQL command to fetch account and secret questions
                SqlCommand cmd = new SqlCommand("SELECT AccountID, SecretQuestion1, SecretQuestion2, SecretQuestion3 FROM Account WHERE Email=@Email", conn);
                cmd.Parameters.AddWithValue("@Email", email);
                var reader = cmd.ExecuteReader();
                if (reader.Read())
                {
                    // Store AccountID and display secret questions
                    foundAccountId = Convert.ToInt32(reader["AccountID"]);
                    lblQ1.Text = reader["SecretQuestion1"].ToString();
                    lblQ2.Text = reader["SecretQuestion2"].ToString();
                    lblQ3.Text = reader["SecretQuestion3"].ToString();
                    pnlQuestions.Visible = true;
                    // Save AccountID in ViewState for later use
                    ViewState["AccountID"] = foundAccountId;
                }
                else
                {
                    // Show error if email not found
                    lblResult.Text = "Email not found.";
                }
                reader.Close();
            }
        }

        // Event handler for verifying secret answers
        protected void btnVerifyAnswers_Click(object sender, EventArgs e)
        {
            // Clear previous result
            lblResult.Text = "";
            // Retrieve AccountID from ViewState
            int accountId = ViewState["AccountID"] != null ? Convert.ToInt32(ViewState["AccountID"]) : 0;
            if (accountId == 0)
            {
                // Prompt user to load questions first
                lblResult.Text = "Please load your secret questions first.";
                return;
            }
            // Get answers input from user
            string a1 = txtA1.Text.Trim();
            string a2 = txtA2.Text.Trim();
            string a3 = txtA3.Text.Trim();

            // Check answers against database
            using (SqlConnection conn = new SqlConnection(connStr))
            {
                conn.Open();
                // Prepare SQL command to fetch secret answers
                SqlCommand cmd = new SqlCommand("SELECT SecretAnswer1, SecretAnswer2, SecretAnswer3 FROM Account WHERE AccountID=@AccountID", conn);
                cmd.Parameters.AddWithValue("@AccountID", accountId);
                var reader = cmd.ExecuteReader();
                if (reader.Read())
                {
                    // Retrieve correct answers from database
                    string ans1 = reader["SecretAnswer1"].ToString();
                    string ans2 = reader["SecretAnswer2"].ToString();
                    string ans3 = reader["SecretAnswer3"].ToString();
                    // Compare user answers (case-insensitive)
                    if (a1.Equals(ans1, StringComparison.OrdinalIgnoreCase) &&
                        a2.Equals(ans2, StringComparison.OrdinalIgnoreCase) &&
                        a3.Equals(ans3, StringComparison.OrdinalIgnoreCase))
                    {
                        reader.Close();
                        // Redirect to ResetPassword.aspx with accountId if answers are correct
                        Response.Redirect("ResetPassword.aspx?accountId=" + accountId);
                    }
                    else
                    {
                        // Show error if any answer is incorrect
                        lblResult.Text = "One or more answers are incorrect.";
                    }
                }
                else
                {
                    // Show error if account not found
                    lblResult.Text = "Account not found.";
                }
                reader.Close();
            }
        }

        // Page load event (currently unused)
        protected void Page_Load(object sender, EventArgs e)
        {

        }
    }
}
